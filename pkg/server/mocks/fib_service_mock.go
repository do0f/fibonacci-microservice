// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/server/server.go

// Package fib_service_mock is a generated GoMock package.
package fib_service_mock

import (
	service "fibonacci_service/pkg/service"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockFibService is a mock of FibService interface.
type MockFibService struct {
	ctrl     *gomock.Controller
	recorder *MockFibServiceMockRecorder
}

// MockFibServiceMockRecorder is the mock recorder for MockFibService.
type MockFibServiceMockRecorder struct {
	mock *MockFibService
}

// NewMockFibService creates a new mock instance.
func NewMockFibService(ctrl *gomock.Controller) *MockFibService {
	mock := &MockFibService{ctrl: ctrl}
	mock.recorder = &MockFibServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFibService) EXPECT() *MockFibServiceMockRecorder {
	return m.recorder
}

// FibSequence mocks base method.
func (m *MockFibService) FibSequence(first, last int) ([]service.FibNumber, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FibSequence", first, last)
	ret0, _ := ret[0].([]service.FibNumber)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FibSequence indicates an expected call of FibSequence.
func (mr *MockFibServiceMockRecorder) FibSequence(first, last interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FibSequence", reflect.TypeOf((*MockFibService)(nil).FibSequence), first, last)
}
